from pyqgis_scripting_ext.core import*

#Clean up     to avoid that everytime you run the code, it creates a new layer
HMap.remove_layers_by_name(["OpenStreetMap", citiesName, "test"])

folder = "/Users/enricanicoletto/Desktop/Advanced geomatics/Excercises/Data/packages/"
geopackagePath = folder + "natural_earth_vector.gpkg"
countriesName = "ne_50m_admin_0_countries"
citiesName = "ne_50m_populated_places"

#load openstreetmap titles layer
osm = HMap.get_osm_layer()
HMap.add_layer(osm)

#load the countries layer
countriesLayer = HVectorLayer.open(geopackagePath, countriesName)

print("Schema (first 4 fields):")
counter = 0
for name, type in countriesLayer.fields.items():
    counter += 1
    if counter < 5:
        print("\t", name, "of type", type)
        

crs = countriesLayer.prjcode

print("Projection:", crs)

print("Spatial extent:", countriesLayer.bbox())

print("Feature count:", countriesLayer.size())

print("Attributes of Italy:")
nameIndex = countriesLayer.field_index("NAME")
countriesFeatures = countriesLayer.features()
for feature in countriesFeatures:
    name = feature.attributes[nameIndex]
    if name == "Italy":
        geometry = feature.geometry
        print("Geom:", geometry.asWkt()[:50] + "...")
        
        
#Filtering    
expressions = "NAME like 'I%' AND POP_EST > 3000000"
filteredCountriesFeatures = countriesLayer.features(expressions)
count = 0
for feature in filteredCountriesFeatures:
    print(feature.attributes[nameIndex])
    count += 1
print("Feature count with filter", count)


lon = 11.119982
lat = 46.080428
point = HPoint(lon, lat)
buffer = point.buffer(2)
    
citiesLayer = HVectorLayer.open(geopackagePath, citiesName)
HMap.add_layer(citiesLayer)

citiesNameIndex = citiesLayer.field_index("NAME")
aoi = buffer.bbox() #aoi = area of interest
count = 0
for feature in citiesLayer.features(bbox=aoi):
    print(feature.attributes[citiesNameIndex])
    count += 1
print("Cities features listed with bbox filter:", count) #bbox filter are usually faster (but less precise)than geometry filter 

count = 0
for feature in citiesLayer.features(geometryfilter=buffer):
    print(feature.attributes[citiesNameIndex])
    count += 1
print("Cities features listed with geometry filter:", count)

#CREATE DATA

#Create a schema
fields = {
    "id": "Integer",
    "name": "String"
}

just2citiesLayer = HVectorLayer.new("test", "Point", "EPSG:4326", fields) #test is the name you give to the layer

just2citiesLayer.add_feature(HPoint(-122.42, 37.78), [1, "San Francisco"]) #geometry, list of attributes
just2citiesLayer.add_feature(HPoint(-73.98, 40.47), [2, "New York"])

path = folder + "test.gpkg"
error = just2citiesLayer.dump_to_gpkg(path, overwrite=True) #gpkg can have more later; True to overwrite the same layer; False to create a second layer in the gpkg
if error:
    print(error)

testLayer = HVectorLayer.open(path, "test") #permanent layer
HMap.add_layer(testLayer)
# HMap.add_layer(just2citiesLayer)

#Second layer
fields = {
    "name": "String",
    "population": "Integer",
    "lat": "Double",
    "lon": "Double"
}

oneCityMoreAttributes = HVectorLayer.new("test2", "point", "EPSG:4326", fields)
oneCityMoreAttributes.add_feature(HPoint(-73.98, 40.47), ["New York", 19040000, 40.47, -73.98])

hopeNotError = oneCityMoreAttributes.dump_to_gpkg(path, overwrite=False)
if hopeNotError:
    print(hopeNotError)
